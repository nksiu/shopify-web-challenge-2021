{"version":3,"sources":["actions/types.js","components/Home/SearchBar.js","actions/moviesActions.js","actions/nominationActions.js","components/MovieModal/MovieInfo.js","components/MovieModal/index.js","components/Home/Movie.js","components/Home/Movies.js","components/Home/Nomination.js","components/Home/Nominations.js","components/Home/index.js","App.js","reportWebVitals.js","reducers/moviesReducer.js","reducers/nominationsReducer.js","reducers/index.js","store.js","index.js"],"names":["GET_MOVIES","ADD_NOMINATION","REMOVE_NOMINATION","NOMINATION_LIMIT","connect","getMovies","searchTitle","dispatch","type","payload","useState","title","setTitle","className","placeholder","id","onChange","e","target","value","onKeyDown","keyCode","addNomination","movie","limitNomination","shouldLimit","MovieInfo","movieInfo","Plot","Genre","Director","Actors","Rated","Released","Runtime","MOVIE_QUERY","gql","nominations","inNom","imdbID","show","setShow","onClick","style","minWidth","marginTop","Modal","onHide","size","Header","closeButton","Title","Body","query","variables","loading","error","data","Spinner","animation","variant","console","log","Footer","preventDefault","length","setTimeout","disabled","state","nominationList","bottom","src","Poster","alt","display","height","width","margin","Year","MOVIES_QUERY","movieList","titleSearch","movies","map","removeNomination","movieId","nomination","data-id","fontSize","nominationLimit","top","position","marginLeft","zIndex","data-dismiss","client","ApolloClient","uri","App","Home","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","movieReducer","action","JSON","parse","localStorage","getItem","nominationReducer","addMovies","setItem","stringify","removeMovies","filter","combineReducers","moviesReducer","nominationsReducer","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","f","AppWithStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5c79e8bd.chunk.js","sourcesContent":["export const GET_MOVIES = \"GET_MOVIES\"\n\nexport const ADD_NOMINATION = \"ADD_NOMINATION\"\nexport const REMOVE_NOMINATION = \"REMOVE_NOMINATION\"\nexport const NOMINATION_LIMIT = \"NOMINATION_LIMIT\"\n","import React, {Fragment, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport {getMovies} from \"../../actions/moviesActions\";\n\nconst SearchBar = ({getMovies}) => {\n  const [title, setTitle] = useState(\"\");\n\n  const handleChange = (e) => {\n    setTitle(e.target.value);\n  }\n\n  const onEnter = (e) => {\n    if (e.keyCode === 13) {\n      getMovies(title);\n    }\n  }\n\n  return (\n    <Fragment>\n      <h1>The Shoppies</h1>\n      <input \n        className=\"form-control form-control-lg\"\n        type=\"text\"\n        placeholder=\"Movie Title\"\n        id=\"inputLarge\"\n        onChange={handleChange}\n        onKeyDown={onEnter}\n      />\n    </Fragment>\n  )\n}\n\nexport default connect(null, {getMovies})(SearchBar);","import {GET_MOVIES} from \"../actions/types\";\n\nexport const getMovies = (searchTitle) => dispatch => {\n  return dispatch({\n    type: GET_MOVIES,\n    payload: searchTitle\n  });\n}\n","import {ADD_NOMINATION, REMOVE_NOMINATION, NOMINATION_LIMIT} from \"../actions/types\";\n\nexport const addNomination = (movie) => dispatch => {\n  return dispatch({\n    type: ADD_NOMINATION,\n    payload: movie\n  })\n}\n\nexport const removeNomination = (movieId) => dispatch => {\n  return dispatch({\n    type: REMOVE_NOMINATION,\n    payload: movieId\n  })\n}\n\nexport const limitNomination = (shouldLimit) => dispatch => {\n  return dispatch({\n    type: NOMINATION_LIMIT,\n    payload: shouldLimit\n  })\n}\n","import React from \"react\";\n\nconst MovieInfo = ({movieInfo}) => {\n\n  return (\n    <ul className=\"list-group\">\n      <li className=\"list-group-item\">\n        <strong>Plot</strong>: {movieInfo.Plot}\n      </li>\n      <li className=\"list-group-item\">\n        <strong>Genre</strong>: {movieInfo.Genre}\n      </li>\n      <li className=\"list-group-item\">\n        <strong>Director</strong>: {movieInfo.Director}\n      </li>\n      <li className=\"list-group-item\">\n        <strong>Actors</strong>: {movieInfo.Actors}\n      </li>\n      <li className=\"list-group-item\">\n        <strong>Rated</strong>: {movieInfo.Rated}\n      </li>\n      <li className=\"list-group-item\">\n        <strong>Released</strong>: {movieInfo.Released}\n      </li>\n      <li className=\"list-group-item\">\n        <strong>Runtime</strong>: {movieInfo.Runtime}\n      </li>\n    </ul>\n  )\n}\n\nexport default MovieInfo;\n","import React, {Fragment, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport {addNomination, limitNomination} from \"../../actions/nominationActions\";\nimport gql from \"graphql-tag\";\nimport {Query} from \"react-apollo\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport MovieInfo from \"./MovieInfo\";\n\nconst MOVIE_QUERY = gql`\n  query MovieInfoType($imdbID: String!){\n    movieInfo(imdbID: $imdbID){\n      Rated,\n      Released,\n      Runtime,\n      Genre,\n      Plot,\n      Actors,\n      Director\n    }\n  }\n`\n\nconst nominationLimit = 5;\n\nconst MovieModal = ({movie, nominations, addNomination, limitNomination}) => {\n  let inNom = false;\n  for (let nomination of nominations) {\n    if (nomination.imdbID === movie.imdbID) {\n      inNom = true;\n      break;\n    }\n  }\n\n  const handleClick = (e) => {\n    e.preventDefault();\n    if (nominations.length < nominationLimit) {\n      addNomination(movie);\n    } else {\n      limitNomination(true);\n      setTimeout(() => {\n        limitNomination(false);\n      }, 3000)\n    }\n  }\n\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <Fragment>\n      <button\n        type=\"button\" \n        className=\"btn btn-outline-info\"\n        onClick={handleShow}\n        style={{minWidth: \"100px\", marginTop: \"30px\"}}\n      >\n        Details\n      </button>\n\n      <Modal show={show} onHide={handleClose} size=\"lg\">\n        <Modal.Header closeButton>\n          <Modal.Title>{movie.Title}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Query query={MOVIE_QUERY} variables={{imdbID: movie.imdbID}}>\n            {\n              ({loading, error, data}) => {\n                if (loading) return <Spinner className=\"mt-4\" animation=\"border\" variant=\"primary\"/>\n                if (error) console.log(error);\n\n                return <Fragment>\n                  {\n                    data.movieInfo ?\n                      <MovieInfo movieInfo={data.movieInfo}/>\n                    :\n                      <p>Woops, looks like additional info for this movie cannot be found</p>\n                  }\n                </Fragment>\n              }\n            }\n          </Query>\n        </Modal.Body>\n        <Modal.Footer>\n          <button\n            type=\"button\"\n            className={`btn btn-outline-${inNom ? \"secondary\" : \"success\"}`}\n            onClick={handleClick}\n            disabled={inNom}\n            style={{minWidth: \"100px\"}}\n          >\n            Nominate\n          </button>\n        </Modal.Footer>\n      </Modal>\n    </Fragment>\n  )\n}\n\nexport default connect(null, {addNomination, limitNomination})(MovieModal);\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {addNomination, limitNomination} from \"../../actions/nominationActions\";\nimport {Fade} from \"react-reveal\";\nimport MovieModal from \"../MovieModal\";\n\nconst nominationLimit = 5;\n\nconst Movie = ({movie, nominations, addNomination, limitNomination}) => {\n  let inNom = false;\n  for (let nomination of nominations) {\n    if (nomination.imdbID === movie.imdbID) {\n      inNom = true;\n      break;\n    }\n  }\n\n  const handleClick = (e) => {\n    e.preventDefault();\n    if (nominations.length < nominationLimit) {\n      addNomination(movie);\n    } else {\n      limitNomination(true);\n      setTimeout(() => {\n        limitNomination(false)\n      }, 3000)\n    }\n  }\n  \n  return (\n    <Fade bottom>\n      <div className=\"card card-body mb-1\">\n        <div className=\"row\">\n          <div className=\"col-md-2\">\n            <img src={movie.Poster} alt=\"Movie Thumbnail\" style={{display: \"block\", height: \"auto\", width: \"80px\", margin: \"auto\"}}/>\n          </div>\n          <div className=\"col-md-8\">\n            <h5>{movie.Title}</h5>\n            <p>{movie.Year}</p>\n          </div>\n          <div className=\"col-md-2\">\n            <div className=\"row align-items-start\">\n              <button\n                type=\"button\"\n                className={`btn btn-outline-${inNom ? \"secondary\" : \"success\"}`}\n                onClick={handleClick}\n                disabled={inNom}\n                style={{minWidth: \"100px\"}}\n              >\n                Nominate\n              </button>\n            </div>\n            <div className=\"row align-items-end\">\n              <MovieModal movie={movie} nominations={nominations}/>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fade>\n  )\n}\n\nconst mapStateToProps = state => ({\n  nominations: state.nominationList.nominations\n});\n\nexport default connect(mapStateToProps, {addNomination, limitNomination})(Movie);","import React, {Fragment} from \"react\";\nimport {connect} from \"react-redux\";\nimport gql from \"graphql-tag\";\nimport {Query} from \"react-apollo\";\nimport Movie from \"./Movie\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nconst MOVIES_QUERY = gql`\n  query GraphQLList($searchTitle: String!){\n    movies(searchTitle: $searchTitle){\n      Title,\n      Year,\n      imdbID,\n      Poster\n    }\n  }\n`\n\nconst Movies = ({movieList}) => {\n  return (\n    <Fragment>\n      {\n        movieList.titleSearch ?\n        <Fragment>\n          <Query query={MOVIES_QUERY} variables={{searchTitle: movieList.titleSearch}}>\n              {\n                ({loading, error, data}) => {\n                  if (loading) return <Spinner className=\"mt-4\" animation=\"border\" variant=\"primary\"/>\n                  if (error) console.log(error);\n\n                  return <Fragment>\n                    <h4 className=\"h1.display-4 my-3\">\n                      Results for \"{movieList.titleSearch}\"\n                      {\n                        data.movies ?\n                          <span>\n                            <small className=\"form-text text-muted\">\n                              Matched with: {data.movies.length} movies\n                            </small>\n                          </span>\n                        :\n                          null\n                      }\n                    </h4>\n                    {\n                      data.movies ?\n                        data.movies.map(movie => (\n                          <Movie key={movie.imdbID} movie={movie} />\n                        )\n                      )\n                    :\n                      <p>Looks like there's no results...</p>\n                    }\n                  </Fragment>\n                }\n              }\n            </Query>\n          </Fragment>\n        :\n        null\n      }\n    </Fragment>\n  )\n}\n\nconst mapStateToProps = state => ({\n  movieList: state.movieList\n});\n\nexport default connect(mapStateToProps, null)(Movies);\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {removeNomination} from \"../../actions/nominationActions\";\n\nconst Nomination = ({nomination, removeNomination}) => {\n\n  const handleClick = (e) => {\n    e.preventDefault();\n    removeNomination(nomination.imdbID);\n  }\n\n  return (\n    <li className=\"list-group-item\">\n      <div className=\"row align-items-center\">\n        <div className=\"col-md-10\">\n          {nomination.Title} ({nomination.Year})\n        </div>\n        <div className=\"col-md-2\">\n          <button\n            data-id={nomination.imdbID}\n            type=\"button\"\n            className=\"btn btn-outline-danger btn-sm\"\n            onClick={handleClick}\n          >\n            -\n          </button>\n        </div>\n      </div>\n    </li>\n  )\n}\n\nexport default connect(null, {removeNomination})(Nomination);\n","import React, { Fragment } from \"react\";\nimport {connect} from \"react-redux\";\nimport Nomination from \"./Nomination\";\n\nconst Nominations = ({nominations}) => {\n  return (\n    <Fragment>\n      <h3 className=\"h1.display-4 my-3\">\n        Nominations\n        <span>\n          <small className=\"form-text text-muted\" style={{fontSize: \"1rem\"}}>\n            Limit 5\n          </small>\n        </span>\n      </h3>\n      <ul className=\"list-group\">\n        {\n          nominations.map((nomination) => \n            <Nomination key={nomination.imdbID} nomination={nomination}/>\n          )\n        }\n      </ul>\n      <small className=\"form-text text-muted\">\n        Nomination Count: <strong>{nominations.length} out of 5</strong>\n      </small>\n    </Fragment>\n  )\n}\n\nconst mapStateToProps = state => ({\n  nominations: state.nominationList.nominations\n});\n\nexport default connect(mapStateToProps, null)(Nominations);\n","import React, {Fragment} from \"react\";\nimport {connect} from \"react-redux\";\nimport {Fade} from \"react-reveal\";\nimport SearchBar from \"./SearchBar\";\nimport Movies from \"./Movies\";\nimport Nominations from \"./Nominations\";\nimport {limitNomination} from \"../../actions/nominationActions\";\n\nconst HomePage = ({shouldLimit, limitNomination}) => {\n\n  const handleDismiss = (e) => {\n    e.preventDefault();\n    limitNomination(false);\n  }\n\n  return (\n    <Fragment>\n      {\n        shouldLimit ?\n          <Fade top>\n            <div className=\"alert alert-dismissible alert-warning\" style={{position: \"fixed\", marginLeft: \"40%\", zIndex: 100}}>\n              <button type=\"button\" className=\"close\" data-dismiss=\"alert\" onClick={handleDismiss}>&times;</button>\n              You can only have 5 nominations\n            </div>\n          </Fade>\n        :\n          null\n      }\n      <div className=\"row\">\n        <div className=\"col-sm-1\"/>\n        <div className=\"col-sm-6 col-md-7\">\n          <SearchBar />\n          <Movies />\n        </div>\n        <div className=\"col-md-3\">\n          <Nominations />\n        </div>\n        <div className=\"col-sm-1\"/>\n      </div>\n    </Fragment>\n  )\n}\n\nconst mapStateToProps = state => ({\n  shouldLimit: state.nominationList.nominationLimit\n});\n\nexport default connect(mapStateToProps, {limitNomination})(HomePage);\n","import React, {Component} from \"react\";\nimport ApolloClient from \"apollo-boost\";\nimport {ApolloProvider} from \"react-apollo\";\nimport './App.css';\nimport Home from \"./components/Home\";\n\nconst client = new ApolloClient({\n  uri: \"/graphql\"\n});\nclass App extends Component {\n  render() {\n    return (\n      <ApolloProvider client={client}>\n        <Home />\n      </ApolloProvider>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n  GET_MOVIES\n} from \"../actions/types\";\n\nconst initialState = {\n  titleSearch: \"\"\n}\n\nconst movieReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case GET_MOVIES:\n      return {\n        titleSearch: action.payload\n      }\n    default:\n      return state;\n  }\n}\n\nexport default movieReducer;\n","import {\n  ADD_NOMINATION,\n  REMOVE_NOMINATION,\n  NOMINATION_LIMIT\n} from \"../actions/types\";\n\nconst initialState = {\n  nominations: JSON.parse(localStorage.getItem(\"movies\")) || [],\n  nominationLimit: false\n}\n\nconst nominationReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case ADD_NOMINATION:\n      const addMovies = [...state.nominations, action.payload];\n      localStorage.setItem(\"movies\", JSON.stringify(addMovies));\n      return {\n        ...state,\n        nominations: addMovies\n      }\n    case REMOVE_NOMINATION:\n      const removeMovies = state.nominations.filter(nomination => nomination.imdbID !== action.payload);\n      localStorage.setItem(\"movies\", JSON.stringify(removeMovies));\n      return {\n        ...state,\n        nominations: removeMovies\n      }\n    case NOMINATION_LIMIT:\n      return {\n        ...state,\n        nominationLimit: action.payload\n      }\n    default:\n      return state;\n  }\n}\n\nexport default nominationReducer;\n","import {combineReducers} from \"redux\";\nimport moviesReducer from \"./moviesReducer\";\nimport nominationsReducer from \"./nominationsReducer\";\n\nexport default combineReducers({\n  movieList: moviesReducer,\n  nominationList: nominationsReducer\n});\n","import {createStore, applyMiddleware, compose} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\nconst middleware = [thunk];\nconst store = createStore(rootReducer, initialState, compose(\n  applyMiddleware(...middleware),\n  window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() : f => f\n))\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport store from \"./store\";\n\nconst AppWithStore = () => (\n  <Provider store={store}>\n    <App/>\n  </Provider>\n)\nReactDOM.render(<AppWithStore/>, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}